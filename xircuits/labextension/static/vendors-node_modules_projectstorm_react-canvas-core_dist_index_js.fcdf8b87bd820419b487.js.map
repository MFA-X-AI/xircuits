{"version":3,"file":"vendors-node_modules_projectstorm_react-canvas-core_dist_index_js.fcdf8b87bd820419b487.js","mappings":";;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,iBAAiB,mBAAO,CAAC,+CAAQ;AACjC,sBAAsB,mBAAO,CAAC,mGAAoB;AAClD,uBAAuB,mBAAO,CAAC,qGAAqB;AACpD,mBAAmB,mBAAO,CAAC,mFAAwB;AACnD,yBAAyB,mBAAO,CAAC,yHAA+B;AAChE,2BAA2B,mBAAO,CAAC,mHAA4B;AAC/D,4BAA4B,mBAAO,CAAC,qHAA6B;AACjE,uBAAuB,mBAAO,CAAC,iHAA2B;AAC1D;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qGAAqG;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;;;;;;;;;AChIa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;;;;;;;;;ACrCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,iBAAiB,mBAAO,CAAC,0GAAwB;AACjD,UAAU,mBAAO,CAAC,+CAAQ;AAC1B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,0CAA0C,gEAAgE;AAC1G;AACA;AACA;AACA,wBAAwB,8CAA8C;AACtE,oEAAoE,oCAAoC;AACxG;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB;AACzB;;;;;;;;;;AC9Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,iBAAiB,mBAAO,CAAC,0GAAwB;AACjD;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wBAAwB;AACxB;;;;;;;;;;ACzDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,iBAAiB;AAClC,kBAAkB,mBAAO,CAAC,kFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC,iBAAiB,KAAK;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;;;;;;;;AC1Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,iBAAiB,mBAAO,CAAC,4FAAU;AACnC,UAAU,mBAAO,CAAC,+CAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;;;;;;;;;AC/Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,kBAAkB,mBAAO,CAAC,kFAAY;AACtC,UAAU,mBAAO,CAAC,+CAAQ;AAC1B,uBAAuB,mBAAO,CAAC,sGAAsB;AACrD;AACA,4BAA4B;AAC5B;AACA,uCAAuC,6BAA6B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,sDAAsD,mBAAmB,6BAA6B;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB;AAClB;;;;;;;;;;AC3Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,qBAAqB,mBAAO,CAAC,mGAAc;AAC3C,sBAAsB,mBAAO,CAAC,0HAAgC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,wBAAwB,uFAAuF;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;;;;;;;;;;ACvEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,oBAAoB,mBAAO,CAAC,iGAAa;AACzC,mBAAmB,mBAAO,CAAC,mFAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,wBAAwB,wCAAwC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;;;;;;;;;ACxCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iCAAiC;AACjC,gBAAgB,mBAAO,CAAC,wFAAS;AACjC,iBAAiB,mBAAO,CAAC,0GAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,wBAAwB,mBAAmB;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;;;;;;;;;;AC1Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb,iBAAiB,mBAAO,CAAC,0GAAwB;AACjD,UAAU,mBAAO,CAAC,+CAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;;;;;;;;AC1Fa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,UAAU,mBAAO,CAAC,+CAAQ;AAC1B,uBAAuB,mBAAO,CAAC,sGAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB;AACpB;;;;;;;;;;ACvCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;;;;;;;;;ACtBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,0BAA0B,mBAAO,CAAC,sGAAmB;AACrD;AACA;AACA,4BAA4B;AAC5B;;;;;;;;;;ACPa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,+BAA+B,mBAAO,CAAC,gHAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;;;;;;;;;;ACVa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,kBAAkB,mBAAO,CAAC,kFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gCAAgC;AAChC;AACA,eAAe;AACf;AACA,oFAAoF,YAAY,aAAa;AAC7G;AACA;AACA;AACA,mFAAmF,YAAY,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;;;;;;;;;ACjFa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,uBAAuB,mBAAO,CAAC,gGAAgB;AAC/C,UAAU,mBAAO,CAAC,+CAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,KAAK;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA,mBAAmB;AACnB;;;;;;;;;;AC1Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;;;;;;;;;;ACFa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,UAAU,mBAAO,CAAC,+CAAQ;AAC1B,qBAAqB,mBAAO,CAAC,mHAA8B;AAC3D;AACA,4BAA4B;AAC5B,8BAA8B,gDAAgD;AAC9E;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,8DAA8D,YAAY,aAAa;AACvF;AACA,SAAS;AACT;AACA;AACA,6CAA6C,wBAAwB;AACrE;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA,yBAAyB,MAAM;AAC/B;AACA;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;;;;AClIa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,cAAc,mBAAO,CAAC,oDAAO;AAC7B,+BAA+B,mBAAO,CAAC,iIAA+B;AACtE,iBAAiB,mBAAO,CAAC,6FAAiB;AAC1C,2BAA2B,mBAAO,CAAC,yHAA2B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,cAAc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+DAA+D,OAAO;AACtE;AACA;AACA,+DAA+D,OAAO;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,mEAAmE,OAAO;AAC1E,aAAa;AACb,mEAAmE,OAAO;AAC1E,aAAa;AACb,mEAAmE,OAAO;AAC1E,aAAa;AACb,mEAAmE,OAAO;AAC1E,aAAa;AACb,mEAAmE,OAAO;AAC1E,aAAa;AACb,mEAAmE,OAAO;AAC1E,aAAa;AACb,mEAAmE,OAAO;AAC1E,eAAe;AACf,uFAAuF,kCAAkC;AACzH,2EAA2E,6DAA6D;AACxI,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;;;;;;;;;;AC/Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,oBAAoB,mBAAO,CAAC,iHAA6B;AACzD,UAAU,mBAAO,CAAC,+CAAQ;AAC1B;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,8DAA8D,YAAY,aAAa;AACvF;AACA,SAAS;AACT;AACA;AACA,6CAA6C,wBAAwB;AACrE;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;;;;;;;;;ACjEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,cAAc,mBAAO,CAAC,oDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,4FAA4F,yBAAyB;AACrH;AACA;AACA,wBAAwB;AACxB;;;;;;;;;;ACba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,cAAc,mBAAO,CAAC,oDAAO;AAC7B,iBAAiB,mBAAO,CAAC,6FAAiB;AAC1C,gBAAgB,mBAAO,CAAC,0FAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA,CAAC,cAAc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB;AACzB,MAAM,mBAAmB;AACzB;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iCAAiC;AACtF;AACA,iDAAiD,iCAAiC;AAClF;AACA;AACA,4BAA4B;AAC5B;;;;;;;;;;AC3Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC;AAChC,cAAc,mBAAO,CAAC,oDAAO;AAC7B,+BAA+B,mBAAO,CAAC,yHAAiC;AACxE,8BAA8B,mBAAO,CAAC,4HAAuB;AAC7D,6BAA6B,mBAAO,CAAC,0HAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,uBAAuB;AACrG;AACA;AACA,gCAAgC;AAChC;;;;;;;;;;ACnBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,cAAc,mBAAO,CAAC,oDAAO;AAC7B,iBAAiB,mBAAO,CAAC,6FAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,cAAc;AACf;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,0BAA0B;AAC1B;;;;;;;;;;AC3Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,qBAAqB,mBAAO,CAAC,6GAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;;;;;;;;;ACrBa;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,2FAAgB;AACrC,aAAa,mBAAO,CAAC,iFAAW;AAChC,aAAa,mBAAO,CAAC,yHAA+B;AACpD,aAAa,mBAAO,CAAC,2GAAwB;AAC7C,aAAa,mBAAO,CAAC,qHAA6B;AAClD,aAAa,mBAAO,CAAC,qHAA6B;AAClD,aAAa,mBAAO,CAAC,qGAAqB;AAC1C,aAAa,mBAAO,CAAC,mGAAoB;AACzC,aAAa,mBAAO,CAAC,yHAA+B;AACpD,aAAa,mBAAO,CAAC,yGAAuB;AAC5C,aAAa,mBAAO,CAAC,yHAA+B;AACpD,aAAa,mBAAO,CAAC,+GAA0B;AAC/C,aAAa,mBAAO,CAAC,6GAAyB;AAC9C,aAAa,mBAAO,CAAC,6HAAiC;AACtD,aAAa,mBAAO,CAAC,yHAA+B;AACpD,aAAa,mBAAO,CAAC,2HAAgC;AACrD,aAAa,mBAAO,CAAC,qHAA6B;AAClD,aAAa,mBAAO,CAAC,yIAAuC;AAC5D,aAAa,mBAAO,CAAC,iIAAmC;AACxD,aAAa,mBAAO,CAAC,yJAA+C;AACpE,aAAa,mBAAO,CAAC,6IAAyC;AAC9D,aAAa,mBAAO,CAAC,+IAA0C;AAC/D,aAAa,mBAAO,CAAC,mHAA4B;AACjD,aAAa,mBAAO,CAAC,2IAAwC;AAC7D,aAAa,mBAAO,CAAC,mGAAoB;AACzC,aAAa,mBAAO,CAAC,iHAA2B;AAChD,aAAa,mBAAO,CAAC,yGAAuB;AAC5C,aAAa,mBAAO,CAAC,+GAA0B;AAC/C,aAAa,mBAAO,CAAC,6GAAyB;AAC9C,aAAa,mBAAO,CAAC,mHAA4B;AACjD,aAAa,mBAAO,CAAC,6GAAyB;AAC9C,aAAa,mBAAO,CAAC,qHAA6B;AAClD,aAAa,mBAAO,CAAC,mHAA4B;AACjD;;;;;;;;;;AC7Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,gBAAgB,mBAAO,CAAC,oGAAqB;AAC7C,iBAAiB,mBAAO,CAAC,0GAAwB;AACjD,0BAA0B,mBAAO,CAAC,wGAAmB;AACrD,yBAAyB,mBAAO,CAAC,sGAAkB;AACnD,yBAAyB,mBAAO,CAAC,sGAAkB;AACnD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;;;;;;;;;;ACtCa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,oCAAoC,mBAAO,CAAC,4IAAyC;AACrF;AACA,4BAA4B;AAC5B;AACA;AACA,SAAS;AACT,sCAAsC,iBAAiB;AACvD;AACA;AACA;AACA,yBAAyB;AACzB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;;;;;;;;;ACpDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,oCAAoC,mBAAO,CAAC,4IAAyC;AACrF,iBAAiB,mBAAO,CAAC,0GAAwB;AACjD,4BAA4B,mBAAO,CAAC,8HAAkC;AACtE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;;;;;;;;;ACpDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,gBAAgB,mBAAO,CAAC,oGAAqB;AAC7C,iBAAiB,mBAAO,CAAC,0GAAwB;AACjD,4BAA4B,mBAAO,CAAC,4GAAqB;AACzD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sBAAsB;AACtB;;;;;;;;;;AC7Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,oCAAoC,mBAAO,CAAC,4IAAyC;AACrF,8BAA8B,mBAAO,CAAC,gJAA2C;AACjF,mBAAmB,mBAAO,CAAC,mFAAwB;AACnD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;;;;;;;;;ACpEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,cAAc,mBAAO,CAAC,oDAAO;AAC7B,UAAU,mBAAO,CAAC,+CAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB","sources":["webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/CanvasEngine.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/Toolkit.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/actions/DeleteItemsAction.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/actions/ZoomCanvasAction.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core-actions/Action.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core-actions/ActionEventBus.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core-models/BaseEntity.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core-models/BaseModel.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core-models/BasePositionModel.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core-state/AbstractDisplacementState.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core-state/State.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core-state/StateMachine.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core/AbstractFactory.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core/AbstractModelFactory.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core/AbstractReactFactory.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core/BaseObserver.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core/FactoryBank.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/core/ModelGeometryInterface.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/entities/canvas/CanvasModel.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/entities/canvas/CanvasWidget.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/entities/layer/LayerModel.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/entities/layer/SmartLayerWidget.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/entities/layer/TransformLayerWidget.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/entities/selection/SelectionBoxLayerFactory.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/entities/selection/SelectionBoxWidget.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/entities/selection/SelectionLayerModel.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/index.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/states/DefaultState.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/states/DragCanvasState.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/states/MoveItemsState.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/states/SelectingState.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/states/SelectionBoxState.js","webpack://xircuits/./node_modules/@projectstorm/react-canvas-core/dist/widgets/PeformanceWidget.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasEngine = void 0;\nconst lodash_1 = require(\"lodash\");\nconst FactoryBank_1 = require(\"./core/FactoryBank\");\nconst BaseObserver_1 = require(\"./core/BaseObserver\");\nconst geometry_1 = require(\"@projectstorm/geometry\");\nconst ActionEventBus_1 = require(\"./core-actions/ActionEventBus\");\nconst ZoomCanvasAction_1 = require(\"./actions/ZoomCanvasAction\");\nconst DeleteItemsAction_1 = require(\"./actions/DeleteItemsAction\");\nconst StateMachine_1 = require(\"./core-state/StateMachine\");\nclass CanvasEngine extends BaseObserver_1.BaseObserver {\n    constructor(options = {}) {\n        super();\n        this.model = null;\n        this.eventBus = new ActionEventBus_1.ActionEventBus(this);\n        this.stateMachine = new StateMachine_1.StateMachine(this);\n        this.layerFactories = new FactoryBank_1.FactoryBank();\n        this.registerFactoryBank(this.layerFactories);\n        /**\n         * Overrides the standard options with the possible given options\n         */\n        this.options = Object.assign({ registerDefaultDeleteItemsAction: true, registerDefaultZoomCanvasAction: true, repaintDebounceMs: 0 }, options);\n        if (this.options.registerDefaultZoomCanvasAction === true) {\n            this.eventBus.registerAction(new ZoomCanvasAction_1.ZoomCanvasAction());\n        }\n        if (this.options.registerDefaultDeleteItemsAction === true) {\n            this.eventBus.registerAction(new DeleteItemsAction_1.DeleteItemsAction());\n        }\n    }\n    getStateMachine() {\n        return this.stateMachine;\n    }\n    getRelativeMousePoint(event) {\n        const point = this.getRelativePoint(event.clientX, event.clientY);\n        return new geometry_1.Point((point.x - this.model.getOffsetX()) / (this.model.getZoomLevel() / 100.0), (point.y - this.model.getOffsetY()) / (this.model.getZoomLevel() / 100.0));\n    }\n    getRelativePoint(x, y) {\n        const canvasRect = this.canvas.getBoundingClientRect();\n        return new geometry_1.Point(x - canvasRect.left, y - canvasRect.top);\n    }\n    registerFactoryBank(factory) {\n        factory.registerListener({\n            factoryAdded: (event) => {\n                event.factory.setDiagramEngine(this);\n            },\n            factoryRemoved: (event) => {\n                event.factory.setDiagramEngine(null);\n            }\n        });\n    }\n    getActionEventBus() {\n        return this.eventBus;\n    }\n    getLayerFactories() {\n        return this.layerFactories;\n    }\n    getFactoryForLayer(layer) {\n        if (typeof layer === 'string') {\n            return this.layerFactories.getFactory(layer);\n        }\n        return this.layerFactories.getFactory(layer.getType());\n    }\n    setModel(model) {\n        this.model = model;\n        if (this.canvas) {\n            requestAnimationFrame(() => {\n                this.repaintCanvas();\n            });\n        }\n    }\n    getModel() {\n        return this.model;\n    }\n    repaintCanvas(promise) {\n        const { repaintDebounceMs } = this.options;\n        /**\n         * The actual repaint function\n         */\n        const repaint = () => {\n            this.iterateListeners((listener) => {\n                if (listener.repaintCanvas) {\n                    listener.repaintCanvas();\n                }\n            });\n        };\n        // if the `repaintDebounceMs` option is > 0, then apply the debounce\n        let repaintFn = repaint;\n        if (repaintDebounceMs > 0) {\n            repaintFn = lodash_1.debounce(repaint, repaintDebounceMs);\n        }\n        if (promise) {\n            return new Promise((resolve) => {\n                const l = this.registerListener({\n                    rendered: () => {\n                        resolve();\n                        l.deregister();\n                    }\n                });\n                repaintFn();\n            });\n        }\n        repaintFn();\n    }\n    setCanvas(canvas) {\n        if (this.canvas !== canvas) {\n            this.canvas = canvas;\n            if (canvas) {\n                this.fireEvent({}, 'canvasReady');\n            }\n        }\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getMouseElement(event) {\n        return null;\n    }\n    zoomToFit() {\n        const xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n        const yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n        const zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n        this.model.setZoomLevel(this.model.getZoomLevel() * zoomFactor);\n        this.model.setOffset(0, 0);\n        this.repaintCanvas();\n    }\n}\nexports.CanvasEngine = CanvasEngine;\n//# sourceMappingURL=CanvasEngine.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Toolkit = void 0;\nclass Toolkit {\n    /**\n     * Generats a unique ID (thanks Stack overflow :3)\n     * @returns {String}\n     */\n    static UID() {\n        if (Toolkit.TESTING) {\n            Toolkit.TESTING_UID++;\n            return `${Toolkit.TESTING_UID}`;\n        }\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            const r = (Math.random() * 16) | 0;\n            const v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n    static closest(element, selector) {\n        if (!Element.prototype.closest) {\n            Element.prototype.closest = function (s) {\n                var el = this;\n                do {\n                    if (Element.prototype.matches.call(el, s))\n                        return el;\n                    el = el.parentElement || el.parentNode;\n                } while (el !== null && el.nodeType === 1);\n                return null;\n            };\n        }\n        return element.closest(selector);\n    }\n}\nexports.Toolkit = Toolkit;\nToolkit.TESTING = false;\nToolkit.TESTING_UID = 0;\n//# sourceMappingURL=Toolkit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteItemsAction = void 0;\nconst Action_1 = require(\"../core-actions/Action\");\nconst _ = require(\"lodash\");\n/**\n * Deletes all selected items\n */\nclass DeleteItemsAction extends Action_1.Action {\n    constructor(options = {}) {\n        const keyCodes = options.keyCodes || [46, 8];\n        const modifiers = Object.assign({ ctrlKey: false, shiftKey: false, altKey: false, metaKey: false }, options.modifiers);\n        super({\n            type: Action_1.InputType.KEY_DOWN,\n            fire: (event) => {\n                const { keyCode, ctrlKey, shiftKey, altKey, metaKey } = event.event;\n                if (keyCodes.indexOf(keyCode) !== -1 && _.isEqual({ ctrlKey, shiftKey, altKey, metaKey }, modifiers)) {\n                    _.forEach(this.engine.getModel().getSelectedEntities(), (model) => {\n                        // only delete items which are not locked\n                        if (!model.isLocked()) {\n                            model.remove();\n                        }\n                    });\n                    this.engine.repaintCanvas();\n                }\n            }\n        });\n    }\n}\nexports.DeleteItemsAction = DeleteItemsAction;\n//# sourceMappingURL=DeleteItemsAction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZoomCanvasAction = void 0;\nconst Action_1 = require(\"../core-actions/Action\");\nclass ZoomCanvasAction extends Action_1.Action {\n    constructor(options = {}) {\n        super({\n            type: Action_1.InputType.MOUSE_WHEEL,\n            fire: (actionEvent) => {\n                const { event } = actionEvent;\n                // we can block layer rendering because we are only targeting the transforms\n                for (let layer of this.engine.getModel().getLayers()) {\n                    layer.allowRepaint(false);\n                }\n                const model = this.engine.getModel();\n                event.stopPropagation();\n                const oldZoomFactor = this.engine.getModel().getZoomLevel() / 100;\n                let scrollDelta = options.inverseZoom ? -event.deltaY : event.deltaY;\n                //check if it is pinch gesture\n                if (event.ctrlKey && scrollDelta % 1 !== 0) {\n                    /*\n                        Chrome and Firefox sends wheel event with deltaY that\n                        have fractional part, also `ctrlKey` prop of the event is true\n                        though ctrl isn't pressed\n                    */\n                    scrollDelta /= 3;\n                }\n                else {\n                    scrollDelta /= 60;\n                }\n                if (model.getZoomLevel() + scrollDelta > 10) {\n                    model.setZoomLevel(model.getZoomLevel() + scrollDelta);\n                }\n                const zoomFactor = model.getZoomLevel() / 100;\n                const boundingRect = event.currentTarget.getBoundingClientRect();\n                const clientWidth = boundingRect.width;\n                const clientHeight = boundingRect.height;\n                // compute difference between rect before and after scroll\n                const widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n                const heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n                // compute mouse coords relative to canvas\n                const clientX = event.clientX - boundingRect.left;\n                const clientY = event.clientY - boundingRect.top;\n                // compute width and height increment factor\n                const xFactor = (clientX - model.getOffsetX()) / oldZoomFactor / clientWidth;\n                const yFactor = (clientY - model.getOffsetY()) / oldZoomFactor / clientHeight;\n                model.setOffset(model.getOffsetX() - widthDiff * xFactor, model.getOffsetY() - heightDiff * yFactor);\n                this.engine.repaintCanvas();\n                // re-enable rendering\n                for (let layer of this.engine.getModel().getLayers()) {\n                    layer.allowRepaint(true);\n                }\n            }\n        });\n    }\n}\nexports.ZoomCanvasAction = ZoomCanvasAction;\n//# sourceMappingURL=ZoomCanvasAction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Action = exports.InputType = void 0;\nconst Toolkit_1 = require(\"../Toolkit\");\nvar InputType;\n(function (InputType) {\n    InputType[\"MOUSE_DOWN\"] = \"mouse-down\";\n    InputType[\"MOUSE_UP\"] = \"mouse-up\";\n    InputType[\"MOUSE_MOVE\"] = \"mouse-move\";\n    InputType[\"MOUSE_WHEEL\"] = \"mouse-wheel\";\n    InputType[\"KEY_DOWN\"] = \"key-down\";\n    InputType[\"KEY_UP\"] = \"key-up\";\n    InputType[\"TOUCH_START\"] = \"touch-start\";\n    InputType[\"TOUCH_END\"] = \"touch-end\";\n    InputType[\"TOUCH_MOVE\"] = \"touch-move\";\n})(InputType = exports.InputType || (exports.InputType = {}));\nclass Action {\n    constructor(options) {\n        this.options = options;\n        this.id = Toolkit_1.Toolkit.UID();\n    }\n    setEngine(engine) {\n        this.engine = engine;\n    }\n}\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActionEventBus = void 0;\nconst Action_1 = require(\"./Action\");\nconst _ = require(\"lodash\");\nclass ActionEventBus {\n    constructor(engine) {\n        this.actions = {};\n        this.engine = engine;\n        this.keys = {};\n    }\n    getKeys() {\n        return _.keys(this.keys);\n    }\n    registerAction(action) {\n        action.setEngine(this.engine);\n        this.actions[action.id] = action;\n        return () => {\n            this.deregisterAction(action);\n        };\n    }\n    deregisterAction(action) {\n        action.setEngine(null);\n        delete this.actions[action.id];\n    }\n    getActionsForType(type) {\n        return _.filter(this.actions, (action) => {\n            return action.options.type === type;\n        });\n    }\n    getModelForEvent(actionEvent) {\n        if (actionEvent.model) {\n            return actionEvent.model;\n        }\n        return this.engine.getMouseElement(actionEvent.event);\n    }\n    getActionsForEvent(actionEvent) {\n        const { event } = actionEvent;\n        if (event.type === 'mousedown') {\n            return this.getActionsForType(Action_1.InputType.MOUSE_DOWN);\n        }\n        else if (event.type === 'mouseup') {\n            return this.getActionsForType(Action_1.InputType.MOUSE_UP);\n        }\n        else if (event.type === 'keydown') {\n            // store the recorded key\n            this.keys[event.key.toLowerCase()] = true;\n            return this.getActionsForType(Action_1.InputType.KEY_DOWN);\n        }\n        else if (event.type === 'keyup') {\n            // delete the recorded key\n            delete this.keys[event.key.toLowerCase()];\n            return this.getActionsForType(Action_1.InputType.KEY_UP);\n        }\n        else if (event.type === 'mousemove') {\n            return this.getActionsForType(Action_1.InputType.MOUSE_MOVE);\n        }\n        else if (event.type === 'wheel') {\n            return this.getActionsForType(Action_1.InputType.MOUSE_WHEEL);\n        }\n        else if (event.type === 'touchstart') {\n            return this.getActionsForType(Action_1.InputType.TOUCH_START);\n        }\n        else if (event.type === 'touchend') {\n            return this.getActionsForType(Action_1.InputType.TOUCH_END);\n        }\n        else if (event.type === 'touchmove') {\n            return this.getActionsForType(Action_1.InputType.TOUCH_MOVE);\n        }\n        return [];\n    }\n    fireAction(actionEvent) {\n        const actions = this.getActionsForEvent(actionEvent);\n        for (let action of actions) {\n            action.options.fire(actionEvent);\n        }\n    }\n}\nexports.ActionEventBus = ActionEventBus;\n//# sourceMappingURL=ActionEventBus.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseEntity = void 0;\nconst Toolkit_1 = require(\"../Toolkit\");\nconst _ = require(\"lodash\");\nconst BaseObserver_1 = require(\"../core/BaseObserver\");\nclass BaseEntity extends BaseObserver_1.BaseObserver {\n    constructor(options = {}) {\n        super();\n        this.options = Object.assign({ id: Toolkit_1.Toolkit.UID() }, options);\n    }\n    getOptions() {\n        return this.options;\n    }\n    getID() {\n        return this.options.id;\n    }\n    doClone(lookupTable = {}, clone) {\n        /*noop*/\n    }\n    clone(lookupTable = {}) {\n        // try and use an existing clone first\n        if (lookupTable[this.options.id]) {\n            return lookupTable[this.options.id];\n        }\n        let clone = _.cloneDeep(this);\n        clone.options = Object.assign(Object.assign({}, this.options), { id: Toolkit_1.Toolkit.UID() });\n        clone.clearListeners();\n        lookupTable[this.options.id] = clone;\n        this.doClone(lookupTable, clone);\n        return clone;\n    }\n    clearListeners() {\n        this.listeners = {};\n    }\n    deserialize(event) {\n        this.options.id = event.data.id;\n        this.options.locked = event.data.locked;\n    }\n    serialize() {\n        return {\n            id: this.options.id,\n            locked: this.options.locked\n        };\n    }\n    fireEvent(event, k) {\n        super.fireEvent(Object.assign({ entity: this }, event), k);\n    }\n    isLocked() {\n        return this.options.locked;\n    }\n    setLocked(locked = true) {\n        this.options.locked = locked;\n        this.fireEvent({\n            locked: locked\n        }, 'lockChanged');\n    }\n}\nexports.BaseEntity = BaseEntity;\n//# sourceMappingURL=BaseEntity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseModel = void 0;\nconst BaseEntity_1 = require(\"./BaseEntity\");\nconst CanvasModel_1 = require(\"../entities/canvas/CanvasModel\");\nclass BaseModel extends BaseEntity_1.BaseEntity {\n    constructor(options) {\n        super(options);\n    }\n    performanceTune() {\n        return true;\n    }\n    getParentCanvasModel() {\n        if (!this.parent) {\n            return null;\n        }\n        if (this.parent instanceof CanvasModel_1.CanvasModel) {\n            return this.parent;\n        }\n        else if (this.parent instanceof BaseModel) {\n            return this.parent.getParentCanvasModel();\n        }\n        return null;\n    }\n    getParent() {\n        return this.parent;\n    }\n    setParent(parent) {\n        this.parent = parent;\n    }\n    getSelectionEntities() {\n        return [this];\n    }\n    serialize() {\n        return Object.assign(Object.assign({}, super.serialize()), { type: this.options.type, selected: this.options.selected, extras: this.options.extras });\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.options.extras = event.data.extras;\n        this.options.selected = event.data.selected;\n    }\n    getType() {\n        return this.options.type;\n    }\n    isSelected() {\n        return this.options.selected;\n    }\n    isLocked() {\n        const locked = super.isLocked();\n        if (locked) {\n            return true;\n        }\n        // delegate this call up to the parent\n        if (this.parent) {\n            return this.parent.isLocked();\n        }\n        return false;\n    }\n    setSelected(selected = true) {\n        if (this.options.selected !== selected) {\n            this.options.selected = selected;\n            this.fireEvent({\n                isSelected: selected\n            }, 'selectionChanged');\n        }\n    }\n    remove() {\n        this.fireEvent({}, 'entityRemoved');\n    }\n}\nexports.BaseModel = BaseModel;\n//# sourceMappingURL=BaseModel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasePositionModel = void 0;\nconst BaseModel_1 = require(\"./BaseModel\");\nconst geometry_1 = require(\"@projectstorm/geometry\");\nclass BasePositionModel extends BaseModel_1.BaseModel {\n    constructor(options) {\n        super(options);\n        this.position = options.position || new geometry_1.Point(0, 0);\n    }\n    setPosition(x, y) {\n        if (typeof x === 'object') {\n            this.position = x;\n        }\n        else if (typeof x) {\n            this.position = new geometry_1.Point(x, y);\n        }\n        this.fireEvent({}, 'positionChanged');\n    }\n    getBoundingBox() {\n        return new geometry_1.Rectangle(this.position, 0, 0);\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.position = new geometry_1.Point(event.data.x, event.data.y);\n    }\n    serialize() {\n        return Object.assign(Object.assign({}, super.serialize()), { x: this.position.x, y: this.position.y });\n    }\n    getPosition() {\n        return this.position;\n    }\n    getX() {\n        return this.position.x;\n    }\n    getY() {\n        return this.position.y;\n    }\n}\nexports.BasePositionModel = BasePositionModel;\n//# sourceMappingURL=BasePositionModel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractDisplacementState = void 0;\nconst State_1 = require(\"./State\");\nconst Action_1 = require(\"../core-actions/Action\");\nclass AbstractDisplacementState extends State_1.State {\n    constructor(options) {\n        super(options);\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.MOUSE_DOWN,\n            fire: (actionEvent) => {\n                const { clientX, clientY } = actionEvent.event;\n                this.handleMoveStart(clientX, clientY);\n            }\n        }));\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.MOUSE_MOVE,\n            fire: (actionEvent) => {\n                const { event } = actionEvent;\n                if (event.buttons === 0) {\n                    // If buttons is 0, it means the mouse is not down, the user may have released it\n                    // outside of the canvas, then we eject the state\n                    this.eject();\n                    return;\n                }\n                const { clientX, clientY } = event;\n                this.handleMove(clientX, clientY, event);\n            }\n        }));\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.MOUSE_UP,\n            fire: () => this.handleMoveEnd()\n        }));\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.TOUCH_START,\n            fire: (actionEvent) => {\n                const { clientX, clientY } = actionEvent.event.touches[0];\n                this.handleMoveStart(clientX, clientY);\n            }\n        }));\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.TOUCH_MOVE,\n            fire: (actionEvent) => {\n                const { event } = actionEvent;\n                const { clientX, clientY } = event.touches[0];\n                this.handleMove(clientX, clientY, event);\n            }\n        }));\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.TOUCH_END,\n            fire: () => this.handleMoveEnd()\n        }));\n    }\n    handleMoveStart(x, y) {\n        this.initialX = x;\n        this.initialY = y;\n        const rel = this.engine.getRelativePoint(x, y);\n        this.initialXRelative = rel.x;\n        this.initialYRelative = rel.y;\n    }\n    handleMove(x, y, event) {\n        this.fireMouseMoved({\n            displacementX: x - this.initialX,\n            displacementY: y - this.initialY,\n            virtualDisplacementX: (x - this.initialX) / (this.engine.getModel().getZoomLevel() / 100.0),\n            virtualDisplacementY: (y - this.initialY) / (this.engine.getModel().getZoomLevel() / 100.0),\n            event\n        });\n    }\n    handleMoveEnd() {\n        this.eject();\n    }\n}\nexports.AbstractDisplacementState = AbstractDisplacementState;\n//# sourceMappingURL=AbstractDisplacementState.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.State = void 0;\nconst Action_1 = require(\"../core-actions/Action\");\nconst _ = require(\"lodash\");\nclass State {\n    constructor(options) {\n        this.actions = [];\n        this.keys = [];\n        this.childStates = [];\n        this.options = options;\n    }\n    setEngine(engine) {\n        this.engine = engine;\n    }\n    getOptions() {\n        return this.options;\n    }\n    eject() {\n        this.engine.getStateMachine().popState();\n    }\n    transitionWithEvent(state, event) {\n        this.engine.getStateMachine().pushState(state);\n        this.engine.getActionEventBus().fireAction(event);\n    }\n    registerAction(action) {\n        this.actions.push(action);\n    }\n    tryActivateParentState(keys) {\n        if (this.keys.length > 0 && !this.isKeysFullfilled(keys)) {\n            this.eject();\n            return true;\n        }\n        return false;\n    }\n    tryActivateChildState(keys) {\n        const state = this.findStateToActivate(keys);\n        if (state) {\n            this.engine.getStateMachine().pushState(state);\n            return true;\n        }\n        return false;\n    }\n    findStateToActivate(keys) {\n        for (let child of this.childStates) {\n            if (child.isKeysFullfilled(keys)) {\n                return child;\n            }\n        }\n        return null;\n    }\n    isKeysFullfilled(keys) {\n        return _.intersection(this.keys, keys).length === this.keys.length;\n    }\n    activated(previous) {\n        const keys = this.engine.getActionEventBus().getKeys();\n        if (this.tryActivateParentState(keys) || this.tryActivateChildState(keys)) {\n            return;\n        }\n        // perhaps we need to pop again?\n        this.handler1 = this.engine.getActionEventBus().registerAction(new Action_1.Action({\n            type: Action_1.InputType.KEY_DOWN,\n            fire: () => {\n                this.tryActivateChildState(this.engine.getActionEventBus().getKeys());\n            }\n        }));\n        this.handler2 = this.engine.getActionEventBus().registerAction(new Action_1.Action({\n            type: Action_1.InputType.KEY_UP,\n            fire: () => {\n                this.tryActivateParentState(this.engine.getActionEventBus().getKeys());\n            }\n        }));\n        for (let action of this.actions) {\n            this.engine.getActionEventBus().registerAction(action);\n        }\n    }\n    deactivated(next) {\n        if (this.handler1) {\n            this.handler1();\n        }\n        if (this.handler2) {\n            this.handler2();\n        }\n        // if this happens, we are going into heirachial state machine mode\n        for (let action of this.actions) {\n            this.engine.getActionEventBus().deregisterAction(action);\n        }\n    }\n}\nexports.State = State;\n//# sourceMappingURL=State.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StateMachine = void 0;\nconst _ = require(\"lodash\");\nconst BaseObserver_1 = require(\"../core/BaseObserver\");\nclass StateMachine extends BaseObserver_1.BaseObserver {\n    constructor(engine) {\n        super();\n        this.engine = engine;\n        this.stateStack = [];\n    }\n    getCurrentState() {\n        return this.currentState;\n    }\n    pushState(state) {\n        this.stateStack.push(state);\n        this.setState(state);\n    }\n    popState() {\n        this.stateStack.pop();\n        this.setState(_.last(this.stateStack));\n    }\n    setState(state) {\n        state.setEngine(this.engine);\n        // if no state object, get the initial state\n        if (this.currentState) {\n            this.currentState.deactivated(state);\n        }\n        const old = this.currentState;\n        this.currentState = state;\n        if (this.currentState) {\n            this.currentState.activated(old);\n            this.fireEvent({\n                newState: state\n            }, 'stateChanged');\n        }\n    }\n}\nexports.StateMachine = StateMachine;\n//# sourceMappingURL=StateMachine.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractFactory = void 0;\n/**\n * Base factory for all the different types of entities.\n * Gets registered with the engine, and is used to generate models\n */\nclass AbstractFactory {\n    constructor(type) {\n        this.type = type;\n    }\n    setDiagramEngine(engine) {\n        this.engine = engine;\n    }\n    setFactoryBank(bank) {\n        this.bank = bank;\n    }\n    getType() {\n        return this.type;\n    }\n}\nexports.AbstractFactory = AbstractFactory;\n//# sourceMappingURL=AbstractFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractModelFactory = void 0;\nconst AbstractFactory_1 = require(\"./AbstractFactory\");\nclass AbstractModelFactory extends AbstractFactory_1.AbstractFactory {\n}\nexports.AbstractModelFactory = AbstractModelFactory;\n//# sourceMappingURL=AbstractModelFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractReactFactory = void 0;\nconst AbstractModelFactory_1 = require(\"./AbstractModelFactory\");\n/**\n * Further extends the AbstractFactory to add widget generation capability.\n */\nclass AbstractReactFactory extends AbstractModelFactory_1.AbstractModelFactory {\n}\nexports.AbstractReactFactory = AbstractReactFactory;\n//# sourceMappingURL=AbstractReactFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseObserver = void 0;\nconst Toolkit_1 = require(\"../Toolkit\");\n/**\n * Base observer pattern class for working with listeners\n */\nclass BaseObserver {\n    constructor() {\n        this.listeners = {};\n    }\n    fireEventInternal(fire, k, event) {\n        this.iterateListeners((listener) => {\n            // returning false here will instruct itteration to stop\n            if (!fire && !event.firing) {\n                return false;\n            }\n            // fire selected listener\n            if (listener[k]) {\n                listener[k](event);\n            }\n        });\n    }\n    fireEvent(event, k) {\n        event = Object.assign({ firing: true, stopPropagation: () => {\n                event.firing = false;\n            } }, event);\n        // fire pre\n        this.fireEventInternal(true, 'eventWillFire', Object.assign(Object.assign({}, event), { function: k }));\n        // fire main event\n        this.fireEventInternal(false, k, event);\n        // fire post\n        this.fireEventInternal(true, 'eventDidFire', Object.assign(Object.assign({}, event), { function: k }));\n    }\n    iterateListeners(cb) {\n        for (let id in this.listeners) {\n            const res = cb(this.listeners[id]);\n            // cancel itteration on false\n            if (res === false) {\n                return;\n            }\n        }\n    }\n    getListenerHandle(listener) {\n        for (let id in this.listeners) {\n            if (this.listeners[id] === listener) {\n                return {\n                    id: id,\n                    listener: listener,\n                    deregister: () => {\n                        delete this.listeners[id];\n                    }\n                };\n            }\n        }\n    }\n    registerListener(listener) {\n        const id = Toolkit_1.Toolkit.UID();\n        this.listeners[id] = listener;\n        return {\n            id: id,\n            listener: listener,\n            deregister: () => {\n                delete this.listeners[id];\n            }\n        };\n    }\n    deregisterListener(listener) {\n        if (typeof listener === 'object') {\n            listener.deregister();\n            return true;\n        }\n        const handle = this.getListenerHandle(listener);\n        if (handle) {\n            handle.deregister();\n            return true;\n        }\n        return false;\n    }\n}\nexports.BaseObserver = BaseObserver;\n//# sourceMappingURL=BaseObserver.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FactoryBank = void 0;\nconst BaseObserver_1 = require(\"./BaseObserver\");\nconst _ = require(\"lodash\");\n/**\n * Store and managed Factories that extend from Abstractfactory\n */\nclass FactoryBank extends BaseObserver_1.BaseObserver {\n    constructor() {\n        super();\n        this.factories = {};\n    }\n    getFactories() {\n        return _.values(this.factories);\n    }\n    clearFactories() {\n        for (let factory in this.factories) {\n            this.deregisterFactory(factory);\n        }\n    }\n    getFactory(type) {\n        if (!this.factories[type]) {\n            throw new Error(`Cannot find factory with type [${type}]`);\n        }\n        return this.factories[type];\n    }\n    registerFactory(factory) {\n        factory.setFactoryBank(this);\n        this.factories[factory.getType()] = factory;\n        // todo fixme\n        this.fireEvent({ factory }, 'factoryAdded');\n    }\n    deregisterFactory(type) {\n        const factory = this.factories[type];\n        factory.setFactoryBank(null);\n        delete this.factories[type];\n        // todo fixme\n        this.fireEvent({ factory }, 'factoryRemoved');\n    }\n}\nexports.FactoryBank = FactoryBank;\n//# sourceMappingURL=FactoryBank.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ModelGeometryInterface.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasModel = void 0;\nconst _ = require(\"lodash\");\nconst BaseEntity_1 = require(\"../../core-models/BaseEntity\");\nclass CanvasModel extends BaseEntity_1.BaseEntity {\n    constructor(options = {}) {\n        super(Object.assign({ zoom: 100, gridSize: 0, offsetX: 0, offsetY: 0 }, options));\n        this.layers = [];\n    }\n    getSelectionEntities() {\n        return _.flatMap(this.layers, (layer) => {\n            return layer.getSelectionEntities();\n        });\n    }\n    getSelectedEntities() {\n        return _.filter(this.getSelectionEntities(), (ob) => {\n            return ob.isSelected();\n        });\n    }\n    clearSelection() {\n        _.forEach(this.getSelectedEntities(), (element) => {\n            element.setSelected(false);\n        });\n    }\n    getModels() {\n        return _.flatMap(this.layers, (layer) => {\n            return _.values(layer.getModels());\n        });\n    }\n    addLayer(layer) {\n        layer.setParent(this);\n        layer.registerListener({\n            entityRemoved: (event) => { }\n        });\n        this.layers.push(layer);\n    }\n    removeLayer(layer) {\n        const index = this.layers.indexOf(layer);\n        if (index !== -1) {\n            this.layers.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    setGridSize(size = 0) {\n        this.options.gridSize = size;\n        this.fireEvent({ size: size }, 'gridUpdated');\n    }\n    getGridPosition(pos) {\n        if (this.options.gridSize === 0) {\n            return pos;\n        }\n        return this.options.gridSize * Math.floor((pos + this.options.gridSize / 2) / this.options.gridSize);\n    }\n    deserializeModel(data, engine) {\n        const models = {};\n        const promises = {};\n        const resolvers = {};\n        const event = {\n            data: data,\n            engine: engine,\n            registerModel: (model) => {\n                models[model.getID()] = model;\n                if (resolvers[model.getID()]) {\n                    resolvers[model.getID()](model);\n                }\n            },\n            getModel(id) {\n                if (models[id]) {\n                    return Promise.resolve(models[id]);\n                }\n                if (!promises[id]) {\n                    promises[id] = new Promise((resolve) => {\n                        resolvers[id] = resolve;\n                    });\n                }\n                return promises[id];\n            }\n        };\n        this.deserialize(event);\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.options.offsetX = event.data.offsetX;\n        this.options.offsetY = event.data.offsetY;\n        this.options.zoom = event.data.zoom;\n        this.options.gridSize = event.data.gridSize;\n        _.forEach(event.data.layers, (layer) => {\n            const layerOb = event.engine.getFactoryForLayer(layer.type).generateModel({\n                initialConfig: layer\n            });\n            layerOb.deserialize(Object.assign(Object.assign({}, event), { data: layer }));\n            this.addLayer(layerOb);\n        });\n    }\n    serialize() {\n        return Object.assign(Object.assign({}, super.serialize()), { offsetX: this.options.offsetX, offsetY: this.options.offsetY, zoom: this.options.zoom, gridSize: this.options.gridSize, layers: _.map(this.layers, (layer) => {\n                return layer.serialize();\n            }) });\n    }\n    setZoomLevel(zoom) {\n        this.options.zoom = zoom;\n        this.fireEvent({ zoom }, 'zoomUpdated');\n    }\n    setOffset(offsetX, offsetY) {\n        this.options.offsetX = offsetX;\n        this.options.offsetY = offsetY;\n        this.fireEvent({ offsetX, offsetY }, 'offsetUpdated');\n    }\n    setOffsetX(offsetX) {\n        this.setOffset(offsetX, this.options.offsetY);\n    }\n    setOffsetY(offsetY) {\n        this.setOffset(this.options.offsetX, offsetY);\n    }\n    getOffsetY() {\n        return this.options.offsetY;\n    }\n    getOffsetX() {\n        return this.options.offsetX;\n    }\n    getZoomLevel() {\n        return this.options.zoom;\n    }\n}\nexports.CanvasModel = CanvasModel;\n//# sourceMappingURL=CanvasModel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasWidget = void 0;\nconst React = require(\"react\");\nconst TransformLayerWidget_1 = require(\"../layer/TransformLayerWidget\");\nconst styled_1 = require(\"@emotion/styled\");\nconst SmartLayerWidget_1 = require(\"../layer/SmartLayerWidget\");\nvar S;\n(function (S) {\n    S.Canvas = styled_1.default.div `\n\t\tposition: relative;\n\t\tcursor: move;\n\t\toverflow: hidden;\n\t`;\n})(S || (S = {}));\nclass CanvasWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.state = {\n            action: null,\n            diagramEngineListener: null\n        };\n    }\n    componentWillUnmount() {\n        this.props.engine.deregisterListener(this.canvasListener);\n        this.props.engine.setCanvas(null);\n        document.removeEventListener('keyup', this.keyUp);\n        document.removeEventListener('keydown', this.keyDown);\n    }\n    registerCanvas() {\n        this.props.engine.setCanvas(this.ref.current);\n        this.props.engine.iterateListeners((list) => {\n            list.rendered && list.rendered();\n        });\n    }\n    componentDidUpdate() {\n        this.registerCanvas();\n    }\n    componentDidMount() {\n        this.canvasListener = this.props.engine.registerListener({\n            repaintCanvas: () => {\n                this.forceUpdate();\n            }\n        });\n        this.keyDown = (event) => {\n            this.props.engine.getActionEventBus().fireAction({ event });\n        };\n        this.keyUp = (event) => {\n            this.props.engine.getActionEventBus().fireAction({ event });\n        };\n        document.addEventListener('keyup', this.keyUp);\n        document.addEventListener('keydown', this.keyDown);\n        this.registerCanvas();\n    }\n    render() {\n        const engine = this.props.engine;\n        const model = engine.getModel();\n        return (React.createElement(S.Canvas, { className: this.props.className, ref: this.ref, onWheel: (event) => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onMouseDown: (event) => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onMouseUp: (event) => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onMouseMove: (event) => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onTouchStart: (event) => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onTouchEnd: (event) => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onTouchMove: (event) => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            } }, model.getLayers().map((layer) => {\n            return (React.createElement(TransformLayerWidget_1.TransformLayerWidget, { layer: layer, key: layer.getID() },\n                React.createElement(SmartLayerWidget_1.SmartLayerWidget, { layer: layer, engine: this.props.engine, key: layer.getID() })));\n        })));\n    }\n}\nexports.CanvasWidget = CanvasWidget;\n//# sourceMappingURL=CanvasWidget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LayerModel = void 0;\nconst BaseModel_1 = require(\"../../core-models/BaseModel\");\nconst _ = require(\"lodash\");\nclass LayerModel extends BaseModel_1.BaseModel {\n    constructor(options = {}) {\n        super(options);\n        this.models = {};\n        this.repaintEnabled = true;\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.options.isSvg = !!event.data.isSvg;\n        this.options.transformed = !!event.data.transformed;\n        _.forEach(event.data.models, (model) => {\n            const modelOb = this.getChildModelFactoryBank(event.engine).getFactory(model.type).generateModel({\n                initialConfig: model\n            });\n            modelOb.deserialize(Object.assign(Object.assign({}, event), { data: model }));\n            this.addModel(modelOb);\n        });\n    }\n    serialize() {\n        return Object.assign(Object.assign({}, super.serialize()), { isSvg: this.options.isSvg, transformed: this.options.transformed, models: _.mapValues(this.models, (model) => {\n                return model.serialize();\n            }) });\n    }\n    isRepaintEnabled() {\n        return this.repaintEnabled;\n    }\n    allowRepaint(allow = true) {\n        this.repaintEnabled = allow;\n    }\n    remove() {\n        if (this.parent) {\n            this.parent.removeLayer(this);\n        }\n        super.remove();\n    }\n    addModel(model) {\n        model.setParent(this);\n        this.models[model.getID()] = model;\n    }\n    getSelectionEntities() {\n        return _.flatMap(this.models, (model) => {\n            return model.getSelectionEntities();\n        });\n    }\n    getModels() {\n        return this.models;\n    }\n    getModel(id) {\n        return this.models[id];\n    }\n    removeModel(id) {\n        const _id = typeof id === 'string' ? id : id.getID();\n        if (this.models[_id]) {\n            delete this.models[_id];\n            return true;\n        }\n        return false;\n    }\n}\nexports.LayerModel = LayerModel;\n//# sourceMappingURL=LayerModel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SmartLayerWidget = void 0;\nconst React = require(\"react\");\nclass SmartLayerWidget extends React.Component {\n    shouldComponentUpdate() {\n        return this.props.layer.isRepaintEnabled();\n    }\n    render() {\n        return this.props.engine.getFactoryForLayer(this.props.layer).generateReactWidget({ model: this.props.layer });\n    }\n}\nexports.SmartLayerWidget = SmartLayerWidget;\n//# sourceMappingURL=SmartLayerWidget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransformLayerWidget = void 0;\nconst React = require(\"react\");\nconst styled_1 = require(\"@emotion/styled\");\nconst react_1 = require(\"@emotion/react\");\nvar S;\n(function (S) {\n    const shared = react_1.css `\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tposition: absolute;\n\t\tpointer-events: none;\n\t\ttransform-origin: 0 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t`;\n    S.DivLayer = styled_1.default.div `\n\t\t${shared}\n\t`;\n    S.SvgLayer = styled_1.default.svg `\n\t\t${shared}\n\t`;\n})(S || (S = {}));\nclass TransformLayerWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    getTransform() {\n        const model = this.props.layer.getParent();\n        return `\n\t\t\ttranslate(\n\t\t\t\t${model.getOffsetX()}px,\n\t\t\t\t${model.getOffsetY()}px)\n\t\t\tscale(\n\t\t\t\t${model.getZoomLevel() / 100.0}\n\t\t\t)\n  \t`;\n    }\n    getTransformStyle() {\n        if (this.props.layer.getOptions().transformed) {\n            return {\n                transform: this.getTransform()\n            };\n        }\n        return {};\n    }\n    render() {\n        if (this.props.layer.getOptions().isSvg) {\n            return React.createElement(S.SvgLayer, { style: this.getTransformStyle() }, this.props.children);\n        }\n        return React.createElement(S.DivLayer, { style: this.getTransformStyle() }, this.props.children);\n    }\n}\nexports.TransformLayerWidget = TransformLayerWidget;\n//# sourceMappingURL=TransformLayerWidget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionBoxLayerFactory = void 0;\nconst React = require(\"react\");\nconst AbstractReactFactory_1 = require(\"../../core/AbstractReactFactory\");\nconst SelectionLayerModel_1 = require(\"./SelectionLayerModel\");\nconst SelectionBoxWidget_1 = require(\"./SelectionBoxWidget\");\nclass SelectionBoxLayerFactory extends AbstractReactFactory_1.AbstractReactFactory {\n    constructor() {\n        super('selection');\n    }\n    generateModel(event) {\n        return new SelectionLayerModel_1.SelectionLayerModel();\n    }\n    generateReactWidget(event) {\n        return React.createElement(SelectionBoxWidget_1.SelectionBoxWidget, { rect: event.model.box });\n    }\n}\nexports.SelectionBoxLayerFactory = SelectionBoxLayerFactory;\n//# sourceMappingURL=SelectionBoxLayerFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionBoxWidget = void 0;\nconst React = require(\"react\");\nconst styled_1 = require(\"@emotion/styled\");\nvar S;\n(function (S) {\n    S.Container = styled_1.default.div `\n\t\tposition: absolute;\n\t\tbackground-color: rgba(0, 192, 255, 0.2);\n\t\tborder: solid 2px rgb(0, 192, 255);\n\t`;\n})(S || (S = {}));\nclass SelectionBoxWidget extends React.Component {\n    render() {\n        const { rect } = this.props;\n        if (!rect)\n            return null;\n        return (React.createElement(S.Container, { style: {\n                top: rect.top,\n                left: rect.left,\n                width: rect.width,\n                height: rect.height\n            } }));\n    }\n}\nexports.SelectionBoxWidget = SelectionBoxWidget;\n//# sourceMappingURL=SelectionBoxWidget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionLayerModel = void 0;\nconst LayerModel_1 = require(\"../layer/LayerModel\");\nclass SelectionLayerModel extends LayerModel_1.LayerModel {\n    constructor() {\n        super({\n            transformed: false,\n            isSvg: false,\n            type: 'selection'\n        });\n    }\n    setBox(rect) {\n        this.box = rect;\n    }\n    getChildModelFactoryBank() {\n        // is not used as it doesnt serialize\n        return null;\n    }\n}\nexports.SelectionLayerModel = SelectionLayerModel;\n//# sourceMappingURL=SelectionLayerModel.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./CanvasEngine\"), exports);\n__exportStar(require(\"./Toolkit\"), exports);\n__exportStar(require(\"./entities/canvas/CanvasModel\"), exports);\n__exportStar(require(\"./core/AbstractFactory\"), exports);\n__exportStar(require(\"./core/AbstractModelFactory\"), exports);\n__exportStar(require(\"./core/AbstractReactFactory\"), exports);\n__exportStar(require(\"./core/BaseObserver\"), exports);\n__exportStar(require(\"./core/FactoryBank\"), exports);\n__exportStar(require(\"./core/ModelGeometryInterface\"), exports);\n__exportStar(require(\"./core-actions/Action\"), exports);\n__exportStar(require(\"./core-actions/ActionEventBus\"), exports);\n__exportStar(require(\"./core-models/BaseEntity\"), exports);\n__exportStar(require(\"./core-models/BaseModel\"), exports);\n__exportStar(require(\"./core-models/BasePositionModel\"), exports);\n__exportStar(require(\"./entities/canvas/CanvasModel\"), exports);\n__exportStar(require(\"./entities/canvas/CanvasWidget\"), exports);\n__exportStar(require(\"./entities/layer/LayerModel\"), exports);\n__exportStar(require(\"./entities/layer/TransformLayerWidget\"), exports);\n__exportStar(require(\"./entities/layer/SmartLayerWidget\"), exports);\n__exportStar(require(\"./entities/selection/SelectionBoxLayerFactory\"), exports);\n__exportStar(require(\"./entities/selection/SelectionBoxWidget\"), exports);\n__exportStar(require(\"./entities/selection/SelectionLayerModel\"), exports);\n__exportStar(require(\"./widgets/PeformanceWidget\"), exports);\n__exportStar(require(\"./core-state/AbstractDisplacementState\"), exports);\n__exportStar(require(\"./core-state/State\"), exports);\n__exportStar(require(\"./core-state/StateMachine\"), exports);\n__exportStar(require(\"./states/DefaultState\"), exports);\n__exportStar(require(\"./states/DragCanvasState\"), exports);\n__exportStar(require(\"./states/SelectingState\"), exports);\n__exportStar(require(\"./states/SelectionBoxState\"), exports);\n__exportStar(require(\"./states/MoveItemsState\"), exports);\n__exportStar(require(\"./actions/DeleteItemsAction\"), exports);\n__exportStar(require(\"./actions/ZoomCanvasAction\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultState = void 0;\nconst State_1 = require(\"../core-state/State\");\nconst Action_1 = require(\"../core-actions/Action\");\nconst DragCanvasState_1 = require(\"./DragCanvasState\");\nconst SelectingState_1 = require(\"./SelectingState\");\nconst MoveItemsState_1 = require(\"./MoveItemsState\");\nclass DefaultState extends State_1.State {\n    constructor() {\n        super({\n            name: 'default'\n        });\n        this.childStates = [new SelectingState_1.SelectingState()];\n        // determine what was clicked on\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.MOUSE_DOWN,\n            fire: (event) => {\n                const element = this.engine.getActionEventBus().getModelForEvent(event);\n                // the canvas was clicked on, transition to the dragging canvas state\n                if (!element) {\n                    this.transitionWithEvent(new DragCanvasState_1.DragCanvasState(), event);\n                }\n                else {\n                    this.transitionWithEvent(new MoveItemsState_1.MoveItemsState(), event);\n                }\n            }\n        }));\n        // touch drags the canvas\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.TOUCH_START,\n            fire: (event) => {\n                this.transitionWithEvent(new DragCanvasState_1.DragCanvasState(), event);\n            }\n        }));\n    }\n}\nexports.DefaultState = DefaultState;\n//# sourceMappingURL=DefaultState.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DragCanvasState = void 0;\nconst AbstractDisplacementState_1 = require(\"../core-state/AbstractDisplacementState\");\nclass DragCanvasState extends AbstractDisplacementState_1.AbstractDisplacementState {\n    constructor(options = {}) {\n        super({\n            name: 'drag-canvas'\n        });\n        this.config = Object.assign({ allowDrag: true }, options);\n    }\n    activated(prev) {\n        const _super = Object.create(null, {\n            activated: { get: () => super.activated }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.activated.call(this, prev);\n            this.engine.getModel().clearSelection();\n            yield this.engine.repaintCanvas(true);\n            // we can block layer rendering because we are only targeting the transforms\n            for (let layer of this.engine.getModel().getLayers()) {\n                layer.allowRepaint(false);\n            }\n            this.initialCanvasX = this.engine.getModel().getOffsetX();\n            this.initialCanvasY = this.engine.getModel().getOffsetY();\n        });\n    }\n    deactivated(next) {\n        super.deactivated(next);\n        for (let layer of this.engine.getModel().getLayers()) {\n            layer.allowRepaint(true);\n        }\n    }\n    fireMouseMoved(event) {\n        if (this.config.allowDrag) {\n            this.engine\n                .getModel()\n                .setOffset(this.initialCanvasX + event.displacementX, this.initialCanvasY + event.displacementY);\n            this.engine.repaintCanvas();\n        }\n    }\n}\nexports.DragCanvasState = DragCanvasState;\n//# sourceMappingURL=DragCanvasState.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveItemsState = void 0;\nconst AbstractDisplacementState_1 = require(\"../core-state/AbstractDisplacementState\");\nconst Action_1 = require(\"../core-actions/Action\");\nconst BasePositionModel_1 = require(\"../core-models/BasePositionModel\");\nclass MoveItemsState extends AbstractDisplacementState_1.AbstractDisplacementState {\n    constructor() {\n        super({\n            name: 'move-items'\n        });\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.MOUSE_DOWN,\n            fire: (event) => {\n                const element = this.engine.getActionEventBus().getModelForEvent(event);\n                if (!element) {\n                    return;\n                }\n                if (!element.isSelected()) {\n                    this.engine.getModel().clearSelection();\n                }\n                element.setSelected(true);\n                this.engine.repaintCanvas();\n            }\n        }));\n    }\n    activated(previous) {\n        super.activated(previous);\n        this.initialPositions = {};\n    }\n    fireMouseMoved(event) {\n        const items = this.engine.getModel().getSelectedEntities();\n        const model = this.engine.getModel();\n        for (let item of items) {\n            if (item instanceof BasePositionModel_1.BasePositionModel) {\n                if (item.isLocked()) {\n                    continue;\n                }\n                if (!this.initialPositions[item.getID()]) {\n                    this.initialPositions[item.getID()] = {\n                        point: item.getPosition(),\n                        item: item\n                    };\n                }\n                const pos = this.initialPositions[item.getID()].point;\n                item.setPosition(model.getGridPosition(pos.x + event.virtualDisplacementX), model.getGridPosition(pos.y + event.virtualDisplacementY));\n            }\n        }\n        this.engine.repaintCanvas();\n    }\n}\nexports.MoveItemsState = MoveItemsState;\n//# sourceMappingURL=MoveItemsState.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectingState = void 0;\nconst State_1 = require(\"../core-state/State\");\nconst Action_1 = require(\"../core-actions/Action\");\nconst SelectionBoxState_1 = require(\"./SelectionBoxState\");\nclass SelectingState extends State_1.State {\n    constructor() {\n        super({\n            name: 'selecting'\n        });\n        this.keys = ['shift'];\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.MOUSE_DOWN,\n            fire: (event) => {\n                const element = this.engine.getActionEventBus().getModelForEvent(event);\n                // go into a selection box on the canvas state\n                if (!element) {\n                    this.transitionWithEvent(new SelectionBoxState_1.SelectionBoxState(), event);\n                }\n                else {\n                    element.setSelected(true);\n                    this.engine.repaintCanvas();\n                }\n            }\n        }));\n    }\n}\nexports.SelectingState = SelectingState;\n//# sourceMappingURL=SelectingState.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionBoxState = void 0;\nconst AbstractDisplacementState_1 = require(\"../core-state/AbstractDisplacementState\");\nconst SelectionLayerModel_1 = require(\"../entities/selection/SelectionLayerModel\");\nconst geometry_1 = require(\"@projectstorm/geometry\");\nclass SelectionBoxState extends AbstractDisplacementState_1.AbstractDisplacementState {\n    constructor() {\n        super({\n            name: 'selection-box'\n        });\n    }\n    activated(previous) {\n        super.activated(previous);\n        this.layer = new SelectionLayerModel_1.SelectionLayerModel();\n        this.engine.getModel().addLayer(this.layer);\n    }\n    deactivated(next) {\n        super.deactivated(next);\n        this.layer.remove();\n        this.engine.repaintCanvas();\n    }\n    getBoxDimensions(event) {\n        let rel;\n        if ('touches' in event.event) {\n            const touch = event.event.touches[0];\n            rel = this.engine.getRelativePoint(touch.clientX, touch.clientY);\n        }\n        else {\n            rel = this.engine.getRelativePoint(event.event.clientX, event.event.clientY);\n        }\n        return {\n            left: rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\n            top: rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\n            width: Math.abs(rel.x - this.initialXRelative),\n            height: Math.abs(rel.y - this.initialYRelative),\n            right: rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\n            bottom: rel.y < this.initialYRelative ? this.initialYRelative : rel.y\n        };\n    }\n    fireMouseMoved(event) {\n        this.layer.setBox(this.getBoxDimensions(event));\n        const relative = this.engine.getRelativeMousePoint({\n            clientX: this.initialX,\n            clientY: this.initialY\n        });\n        if (event.virtualDisplacementX < 0) {\n            relative.x -= Math.abs(event.virtualDisplacementX);\n        }\n        if (event.virtualDisplacementY < 0) {\n            relative.y -= Math.abs(event.virtualDisplacementY);\n        }\n        const rect = new geometry_1.Rectangle(relative, Math.abs(event.virtualDisplacementX), Math.abs(event.virtualDisplacementY));\n        for (let model of this.engine.getModel().getSelectionEntities()) {\n            if (model.getBoundingBox) {\n                const bounds = model.getBoundingBox();\n                if (rect.containsPoint(bounds.getTopLeft()) && rect.containsPoint(bounds.getBottomRight())) {\n                    model.setSelected(true);\n                }\n                else {\n                    model.setSelected(false);\n                }\n            }\n        }\n        this.engine.repaintCanvas();\n    }\n}\nexports.SelectionBoxState = SelectionBoxState;\n//# sourceMappingURL=SelectionBoxState.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PeformanceWidget = void 0;\nconst React = require(\"react\");\nconst _ = require(\"lodash\");\nclass PeformanceWidget extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (!this.props.model.performanceTune()) {\n            return true;\n        }\n        // deserialization event\n        if (this.props.model !== nextProps.model) {\n            return true;\n        }\n        // change event\n        return !_.isEqual(this.props.serialized, nextProps.serialized);\n    }\n    render() {\n        return this.props.children();\n    }\n}\nexports.PeformanceWidget = PeformanceWidget;\n//# sourceMappingURL=PeformanceWidget.js.map"],"names":[],"sourceRoot":""}